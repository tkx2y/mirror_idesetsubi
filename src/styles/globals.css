/* :root {
  --max-width: 1100px;
  --border-radius: 12px;
  --font-mono: ui-monospace, Menlo, Monaco, "Cascadia Mono", "Segoe UI Mono",
    "Roboto Mono", "Oxygen Mono", "Ubuntu Monospace", "Source Code Pro",
    "Fira Mono", "Droid Sans Mono", "Courier New", monospace;

  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;

  --primary-glow: conic-gradient(
    from 180deg at 50% 50%,
    #16abff33 0deg,
    #0885ff33 55deg,
    #54d6ff33 120deg,
    #0071ff33 160deg,
    transparent 360deg
  );
  --secondary-glow: radial-gradient(
    rgba(255, 255, 255, 1),
    rgba(255, 255, 255, 0)
  );

  --tile-start-rgb: 239, 245, 249;
  --tile-end-rgb: 228, 232, 233;
  --tile-border: conic-gradient(
    #00000080,
    #00000040,
    #00000030,
    #00000020,
    #00000010,
    #00000010,
    #00000080
  );

  --callout-rgb: 238, 240, 241;
  --callout-border-rgb: 172, 175, 176;
  --card-rgb: 180, 185, 188;
  --card-border-rgb: 131, 134, 135;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;

    --primary-glow: radial-gradient(rgba(1, 65, 255, 0.4), rgba(1, 65, 255, 0));
    --secondary-glow: linear-gradient(
      to bottom right,
      rgba(1, 65, 255, 0),
      rgba(1, 65, 255, 0),
      rgba(1, 65, 255, 0.3)
    );

    --tile-start-rgb: 2, 13, 46;
    --tile-end-rgb: 2, 5, 19;
    --tile-border: conic-gradient(
      #ffffff80,
      #ffffff40,
      #ffffff30,
      #ffffff20,
      #ffffff10,
      #ffffff10,
      #ffffff80
    );

    --callout-rgb: 20, 20, 20;
    --callout-border-rgb: 108, 108, 108;
    --card-rgb: 100, 100, 100;
    --card-border-rgb: 200, 200, 200;
  }
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

a {
  color: inherit;
  text-decoration: none;
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
} */


/* globalここから */


/* コピペ用コード */
.font-size-dummy {
  font-size: .75rem;
  /* 12px */
  font-size: .8125rem;
  /* 13px */
  font-size: .875rem;
  /* 14px */
  font-size: 1rem;
  /* 16px */
  font-size: 1.25rem;
  /* 20px */
  font-size: 1.75rem;
  /* 28px */
}

body {
  color: #171717;
  background-color: #fff;
  box-sizing: border-box;
  /* display: none; */
}


/* swiper */
.swiper-wrapper {
  align-items: center;
}

.swiper-horizontal {
  padding-bottom: 2rem !important;
}

/*
【左右のスライド】ゆっくりと薄くする小さく
【中央のスライド】ゆっくりと濃くする大きく
*/
.-scale.swiper-slide {
  opacity: .3;
  transform: scale(.8) !important;
  transition: .7s;
}

.-scale.swiper-slide-active {
  opacity: 1;
  transform: scale(1) !important;
  z-index: 1;
}

/* ボタン */
.swiper-button-prev {
  left: 20% !important;
}

.swiper-button-next {
  right: 20% !important;
}

/* ページネーション */
.swiper-pagination-bullets {
  bottom: 0rem !important;
}

/*ドットの色を変更*/
.swiper-pagination-bullet {
  background-color: #fff !important;
}

/* prev&next */
.swiper-button-prev,
.swiper-button-next {
  width: 70px !important;
  height: 70px !important;
  background-color: #fff;
  border-radius: 50%;
  top: 40% !important;
  transform: translateY(-50%) !important;
}

.swiper-button-prev::after,
.swiper-button-next::after {
  content: "" !important;
  display: block;
  background: #315578;
  height: calc(tan(60deg) * 15px / 2);
  width: 15px;
}

.swiper-button-prev::after {
  clip-path: polygon(0 50%, 100% 0, 100% 100%);
}

.swiper-button-next::after {
  clip-path: polygon(0 0, 100% 50%, 0 100%);
}

@media screen and (max-width: 767px) {

  .swiper-button-prev,
  .swiper-button-next {
    display: none !important;
  }


}

/* .fadeIn {
  animation-name: fadeIn;
  animation-duration: 1s;
  animation-fill-mode: forwards;
  opacity: 0;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(100px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
} */


/* .fadeUp {
  animation-name: fadeUpAnime;
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
  opacity: 0;
}

@keyframes fadeUpAnime {
  from {
    opacity: 0;
    transform: translateY(100px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
} */

/* fadeInにクラス名変更予定 　ボタンにも付与*/
.fadeIn {
  opacity: 0;
  animation-duration: 800ms;
  animation-fill-mode: forwards;
}

.fadeIn.-active {
  animation-name: fadeInAnime;
}

.fadeInDelay01 {
  opacity: 0;
  animation-duration: 800ms;
  animation-delay: 0.3s;
  animation-fill-mode: forwards;
}

.fadeInDelay01.-active {
  animation-name: fadeInAnime;
}

.fadeInDelay02 {
  opacity: 0;
  animation-duration: 800ms;
  animation-delay: 0.5s;
  animation-fill-mode: forwards;
}

.fadeInDelay02.-active {
  animation-name: fadeInAnime;
}

@keyframes fadeInAnime {
  from {
    opacity: 0;
    transform: translateY(50px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 一文字ずつフェードインするアニメーション */
/* 順番にフェードインするアニメーション */



:root {
  --delay: 0;
  --duration: 800ms;
  --iterations: 1;
}
/* •·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•·•· */


.reveal-text.-active,
.reveal-text.-active::after {
  animation-delay: var(--animation-delay, 2s);
  animation-iteration-count: var(--iterations, 1);
  animation-duration: var(--duration, 800ms);
  animation-fill-mode: both;
  animation-timing-function: cubic-bezier(0.0, 0.0, 0.2, 1);
}

.reveal-text {
  opacity: 0;
}

.reveal-text.-active {
  --animation-delay: var(--delay, 0);
  --animation-duration: var(--duration, 800ms);
  --animation-iterations: var(--iterations, 1);
  position: relative;
  /* font-size: 10vw; */
  animation-name: clip-text;
  /* color: #FFF; */
  white-space: nowrap;
  cursor: default;
  display: inline-block;
  opacity: 1;
}

.reveal-text.-active::after {
  content: "";
  position: absolute;
  z-index: 999;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #2547C0;
  transform: scaleX(0);
  transform-origin: 0 50%;
  pointer-events: none;
  animation-name: text-revealer;
}


@keyframes clip-text {
  from {
    clip-path: inset(0 100% 0 0);
  }
  to {
    clip-path: inset(0 0 0 0);
  }
}


@keyframes text-revealer {
  
  0%, 50% {
    transform-origin: 0 50%;
  }
  
  60%, 100% {
    transform-origin: 100% 50%;   
  }

  
  60% {
    transform: scaleX(1);
  }
  
  100% {
    transform: scaleX(0);
  }
}


.backgroundColorChange{
  animation-duration: 800ms;
  animation-delay: 0s;
  animation-fill-mode: forwards;
  opacity: 0;
}


.backgroundColorChange.-active {
  animation-name: colorChange;
  /* animation-fill-mode: forwards;
  animation-duration: 5s; */
}

@keyframes colorChange {
  from {
    opacity: 0;
    /* transform: translateY(50px); */
  }

  to {
    opacity: 1;
    /* transform: translateY(0); */
  }
}
